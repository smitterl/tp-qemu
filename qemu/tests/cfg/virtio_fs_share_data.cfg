- virtio_fs_share_data:
    no RHEL.6 RHEL.7 RHEL.8.0 RHEL.8.1
    no Win2008 Win7
    no Host_RHEL.m6 Host_RHEL.m7 Host_RHEL.m8.u0 Host_RHEL.m8.u1
    type = virtio_fs_share_data
    virt_test_type = qemu
    required_qemu = [4.2.0,)
    kill_vm = yes
    start_vm = yes
    filesystems = fs
    fs_driver = virtio-fs
    fs_source_type = mount
    fs_source_dir = virtio_fs_test/
    force_create_fs_source = yes
    remove_fs_source = yes
    fs_target = 'myfs'
    fs_driver_props = {"queue-size": 1024}
    mem = 4096
    mem_devs = mem1
    backend_mem_mem1 = memory-backend-file
    mem-path_mem1 = /dev/shm
    size_mem1 = 4G
    use_mem_mem1 = no
    share_mem = yes
    guest_numa_nodes = shm0
    numa_memdev_shm0 = mem-mem1
    numa_nodeid_shm0 = 0
    s390x:
        guest_numa_nodes =
        mem = 1024
        size_mem1 = 1G
    io_timeout = 600
    fs_dest = '/mnt/${fs_target}'
    driver_name = viofs
    Windows:
        # install winfsp tool
        i386, i686:
            install_path = 'C:\Program Files'
        x86_64:
            install_path = 'C:\Program Files (x86)'
        install_cmd = 'msiexec /i WIN_UTILS:\winfsp-1.7.20172.msi /qn'
        check_installed_cmd = 'dir "%s" |findstr /I winfsp'
        start_vfs_cmd = "start /b %s -d -1 -D C:\\viofs_log.txt"
        check_virtiofs_cmd = 'wmic process where caption="virtiofs.exe" list brief'
        virtio_win_media_type = iso
        cdroms += " virtio"
    variants:
        - with_cache:
            variants:
                - @default:
                - @extra_parameters:
                    no run_stress..extra_parameters
                    variants:
                        - lock_posix_off:
                            fs_binary_extra_options += ",no_posix_lock"
                        - lock_posix_on:
                            fs_binary_extra_options += ",posix_lock"
                    variants:
                        - flock_on:
                            fs_binary_extra_options += ",flock"
                        - flock_off:
                            fs_binary_extra_options += ",no_flock"
                    variants:
                        - xattr_on:
                            fs_binary_extra_options += ",xattr"
                        - xattr_off:
                            fs_binary_extra_options += ",no_xattr"
                        - @default:
            variants:
                - auto:
                    fs_binary_extra_options = " -o cache=auto"
                - always:
                    fs_binary_extra_options = " -o cache=always"
                - none:
                    fs_binary_extra_options = " -o cache=none"
        - with_no_writeback:
            fs_binary_extra_options = " -o no_writeback "
    variants:
        - @default:
            cmd_dd = 'dd if=/dev/urandom of=%s bs=1M count=2048 oflag=direct'
            s390x:
                cmd_dd = 'echo hello > %s'
            cmd_md5 = 'md5sum %s'
            io_timeout = 120
            Windows:
                cmd_dd = 'dd if=/dev/random of=%s bs=1M count=200'
                cmd_md5 = "%s: && md5sum.exe %s"
            default..with_cache.none:
                io_timeout = 600
            variants:
                - @default:
                - with_multi_fs_sources:
                    no Windows
                    no with_multi_fs_sources..with_no_writeback
                    with_multi_fs_sources.with_cache.none:
                        io_timeout = 600
                    filesystems = fs1 fs2 fs3 fs4 fs5
                    fs_source_dir_fs1 = '/tmp/virtio_fs1_test'
                    fs_source_dir_fs2 = '/tmp/virtio_fs2_test'
                    fs_source_dir_fs3 = '/tmp/virtio_fs3_test'
                    fs_source_dir_fs4 = '/tmp/virtio_fs4_test'
                    fs_source_dir_fs5 = '/tmp/virtio_fs5_test'
                    fs_target_fs1 = 'myfs1'
                    fs_target_fs2 = 'myfs2'
                    fs_target_fs3 = 'myfs3'
                    fs_target_fs4 = 'myfs4'
                    fs_target_fs5 = 'myfs5'
                    fs_dest_fs1 = '/mnt/${fs_target_fs1}'
                    fs_dest_fs2 = '/mnt/${fs_target_fs2}'
                    fs_dest_fs3 = '/mnt/${fs_target_fs3}'
                    fs_dest_fs4 = '/mnt/${fs_target_fs4}'
                    fs_dest_fs5 = '/mnt/${fs_target_fs5}'
        - run_stress:
            variants:
                - with_fio:
                    no with_fio..with_no_writeback
                    smp = 8
                    aarch64:
                        vcpu_maxcpus = 8
                    io_timeout = 2000
                    fio_options = '--name=stress --filename=%s --ioengine=libaio --rw=write --direct=1 '
                    fio_options += '--bs=4K --size=1G --iodepth=256 --numjobs=128 --runtime=1800'
                    Windows:
                        fio_options = '--name=stress --filename=%s --ioengine=windowsaio --rw=write --direct=1 '
                        fio_options += '--bs=4K --size=1G --iodepth=256 --numjobs=128 --runtime=1800 --thread'
                - with_pjdfstest:
                    no Windows
                    no with_pjdfstest..with_no_writeback
                    io_timeout = 1800
                    with_pjdfstest..with_cache.none:
                        io_timeout = 7200
                    pjdfstest_pkg = pjdfstest-0.1.tar.bz2
                    cmd_unpack = 'tar -zxvf {0}/${pjdfstest_pkg} -C {0}'
                    cmd_yum_deps = 'yum install -y perl-Test-Harness'
                    cmd_autoreconf = 'autoreconf -ifs %s/pjdfstest/'
                    cmd_configure = '{0}/pjdfstest/configure && '
                    cmd_configure += 'mv config.* {0}/pjdfstest/ && mv Makefile {0}/pjdfstest/ && mv stamp-h1 {0}/pjdfstest/'
                    cmd_make = 'make %s/pjdfstest/pjdfstest'
                    cmd_pjdfstest = 'prove -rv %s/pjdfstest/tests'
